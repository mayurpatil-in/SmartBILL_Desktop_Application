 <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FF6B8E95" Offset="0"/>
        <GradientStop Color="#FF14A7C1" Offset="1"/>
        <GradientStop Color="#FF1E424E" Offset="0.509"/>
        <GradientStop Color="#FF1D4855" Offset="0.542"/>
        <GradientStop Color="#FF1D4855" Offset="0.542"/>
        <GradientStop Color="#FF193A44" Offset="0.526"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HeaderBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FF1D1D1D" Offset="0.614"/>
        <GradientStop Color="#FF007F96" Offset="0.853"/>
        <GradientStop Color="#FF0AEAFA" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource HeaderBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <!-- A red Delete button with hover/pressed feedback -->
    <Style x:Key="ModernDeleteButtonStyle" TargetType="Button">
        <!-- Base setters -->
        <Setter Property="Background" Value="#E74C3C"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Drop shadow -->
                        <Border x:Name="Shadow"
                            CornerRadius="6"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <Border.Effect>
                                <DropShadowEffect
                                Color="Black"
                                BlurRadius="8"
                                ShadowDepth="2"
                                Opacity="0.2"/>
                            </Border.Effect>
                        </Border>
                        <!-- Content border -->
                        <Border x:Name="Border"
                            CornerRadius="6"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#C0392B"/>
                            <Setter TargetName="Shadow" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                    Color="Black"
                                    BlurRadius="12"
                                    ShadowDepth="3"
                                    Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- Pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#922B21"/>
                            <!-- Scale down slightly on press -->
                            <Setter TargetName="Border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                        </Trigger>
                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#DDD"/>
                            <Setter Property="Foreground" Value="#888"/>
                            <Setter TargetName="Shadow" Property="Opacity" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GreenCenteredCheckBox" TargetType="CheckBox">
        <!-- center it in the grid cell -->
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment"   Value="Center"/>
        <!-- override the visual tree -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Width="16" Height="16">
                        <!-- the box outline -->
                        <Border x:Name="Box"
                      Background="Transparent"
                      BorderBrush="Green"
                      BorderThickness="1"
                      CornerRadius="2"/>
                        <!-- the checkmark path -->
                        <Path x:Name="CheckMark"
                    Data="M2,8 L6,12 14,2"
                    Stroke="Green"
                    StrokeThickness="2"
                    Visibility="Collapsed"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- when checked, show the checkmark -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark"
                        Property="Visibility"
                        Value="Visible"/>
                        </Trigger>
                        <!-- when disabled, gray it out -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Box"       Property="BorderBrush" Value="Gray"/>
                            <Setter TargetName="CheckMark" Property="Stroke"      Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Cell style: red border when ProcessName is empty -->
    <Style x:Key="EmptyProcessNameCellStyle" TargetType="DataGridCell">
        <Setter Property="BorderBrush"     Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment"   Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ProcessName}" Value="">
                <Setter Property="BorderBrush"     Value="Red"/>
                <Setter Property="BorderThickness" Value="2"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Editing mode: red border on empty TextBox -->
    <Style x:Key="EmptyProcessNameEditingStyle" TargetType="TextBox">
        <Setter Property="BorderBrush"     Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment"   Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="BorderBrush"     Value="Red"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 3) Display mode: center the TextBlock in the cell -->
    <Style x:Key="ProcessNameElementStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment"   Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Padding"             Value="4,2"/>
    </Style>
</ResourceDictionary>