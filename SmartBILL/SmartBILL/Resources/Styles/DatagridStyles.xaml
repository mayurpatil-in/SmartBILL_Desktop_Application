 <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FF6B8E95" Offset="0"/>
        <GradientStop Color="#FF14A7C1" Offset="1"/>
        <GradientStop Color="#FF1E424E" Offset="0.509"/>
        <GradientStop Color="#FF1D4855" Offset="0.542"/>
        <GradientStop Color="#FF1D4855" Offset="0.542"/>
        <GradientStop Color="#FF193A44" Offset="0.526"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HeaderBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FF1D1D1D" Offset="0.614"/>
        <GradientStop Color="#FF007F96" Offset="0.853"/>
        <GradientStop Color="#FF0AEAFA" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource HeaderBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <!-- A red Delete button with hover/pressed feedback -->
    <Style x:Key="DeleteButtonStyle" TargetType="Button">
        <Setter Property="Background"    Value="#E74C3C"/>
        <!-- tomato red -->
        <Setter Property="Foreground"    Value="White"/>
        <Setter Property="BorderBrush"   Value="#C0392B"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding"       Value="4,2"/>
        <Setter Property="Margin"        Value="2"/>
        <Style.Triggers>
            <!-- mouse-over -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#C0392B"/>
                <Setter Property="Foreground" Value="Black"/>
                <!-- darker red -->
            </Trigger>
            <!-- pressed -->
            <Trigger Property="IsPressed"   Value="True">
                <Setter Property="Background" Value="#922B21"/>
                <!-- darkest red -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GreenCenteredCheckBox" TargetType="CheckBox">
        <!-- center it in the grid cell -->
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment"   Value="Center"/>
        <!-- override the visual tree -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Width="16" Height="16">
                        <!-- the box outline -->
                        <Border x:Name="Box"
                      Background="Transparent"
                      BorderBrush="Green"
                      BorderThickness="1"
                      CornerRadius="2"/>
                        <!-- the checkmark path -->
                        <Path x:Name="CheckMark"
                    Data="M2,8 L6,12 14,2"
                    Stroke="Green"
                    StrokeThickness="2"
                    Visibility="Collapsed"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- when checked, show the checkmark -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark"
                        Property="Visibility"
                        Value="Visible"/>
                        </Trigger>
                        <!-- when disabled, gray it out -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Box"       Property="BorderBrush" Value="Gray"/>
                            <Setter TargetName="CheckMark" Property="Stroke"      Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>